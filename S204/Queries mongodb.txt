1. Escriu una consulta per mostrar tots els documents en la col·lecció Restaurants.
db.Restaurants.find()
2. Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine per tots els documents en la col·lecció Restaurants.
db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1})
3. Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, però exclou el camp _id per tots els documents en la col·lecció Res4.taurants.
db.restaurant.find({},{_id:0,restaurant_id:1, name:1, borough:1,cuisine:1})
4. Escriu una consulta per mostrar restaurant_id, name, borough i zip code, però exclou el camp _id per tots els documents en la col·lecció Restaurants.
db.restaurant.find({},{_id:0, name:1, borough:1, address:{zipcode:1}})
5. Escriu una consulta per mostrar tots els restaurants que estan en el Bronx.
db.restaurant.find({borough:"Bronx"})
6. Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx.
db.restaurant.find({borough:"Bronx"}).limit(5)
7. Escriu una consulta per mostrar el pròxim 5 restaurants després de saltar els primers 5 del Bronx.
db.restaurant.find({borough:"Bronx"}).skip(5).limit(5)
8. Escriu una consulta per trobar els restaurants que tenen un score de més de 90.
db.restaurant.find({"grades.score":{$gte:90}})
9. Escriu una consulta per trobar els restaurants que tenen un score de més de 80 però menys que 100.
db.restaurant.find({"grades.score":{$gte:80,$lte:100}})
10. Escriu una consulta per trobar els restaurants que es localitzen en valor de latitud menys de -95.754168.
db.restaurant.find({"address.coord":{$lte:-95.754168}})
11. Escriu una consulta de MongoDB per a trobar els restaurants que no preparen cap cuisine de 'American' i la seva qualificació és superior a 70 i longitud inferior a -65.754168.
db.restaurant.find({cuisine:{ $ne:"American" },"grades.score":{$gt:70},"address.coord":{$lt:-65.754168}})
12. Escriu una consulta per trobar els restaurants que no preparen cap cuisine de 'American' i van aconseguir un marcador més de 70 i localitzat en la longitud menys que -65.754168. Nota: Fes aquesta consulta sense utilitzar $and operador.
db.restaurant.find({cuisine:{$ne:"American"},"grades.score":{$gte:70},"address.coord":{$lte:-65.754168}})
13. Escriu una consulta per trobar els restaurants que no preparen cap cuisine de 'American' i van obtenir un punt de grau 'A' no pertany a Brooklyn. S'ha de mostrar el document segons la cuisine en ordre descendent.
db.restaurant.find({cuisine:{$ne:"American"},"grades.grade":"A",borough:{$ne:"Brooklyn"}}).sort({cuisine:-1})
14. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Wil' com les tres primeres lletres en el seu nom.
db.restaurant.find({ name : { $regex: "Wil" } },{restaurant_id:1,name:1, borough:1,cuisine:1}) 
15. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'ces' com les últimes tres lletres en el seu nom.
db.restaurant.find({"name" : /.*ces.*/},{restaurant_id:1,name:1,borough:1,cuisine:1});
16. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Reg' com tres lletres en algun lloc en el seu nom.
db.restaurant.find({"name" : /.*Reg.*/},{restaurant_id:1,name:1,borough:1,cuisine:1});
17. Escriu una consulta per trobar els restaurants que pertanyen al Bronx i van preparar qualsevol plat americà o xinès.
db.restaurant.find({$or:[{cuisine: "American "},{cuisine: "Chinese"}],borough:"Bronx"})
18. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que pertanyen a Staten Island o Queens o Bronx o Brooklyn.
db.restaurant.find({$or:[{borough:"Staten Island"},{borough:"Queens"},{borough:"Bronx"},{borough:"Brooklyn"}]},{restaurant_id:1, name:1, borough:1, cuisine:1})
19. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que no pertanyen a Staten Island o Queens o Bronx o Brooklyn.
db.restaurant.find({borough:{$nin:["Staten Island", "Queens", "Bronx", "Brooklyn"] }},{restaurant_id:1,name:1,borough:1,cuisine:1})
20. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que aconsegueixin un marcador que no és més de 10.
db.restaurant.find({grades.score:{$lte:10}},{restaurant_id:1, name:1, borough:1, cuisine:1})
21. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que preparen peix excepte 'American' i 'Chinees' o el name del restaurant comença amb lletres 'Wil'.
db.restaurant.find({$or:[{cuisine:{$nin:["American","Chinese"]}},{name:{$regex:"Will"}}]},{restaurant_id:1, name:1, borough:1, cuisine:1})
22. Escriu una consulta per trobar el restaurant_id, name, i grades per a aquells restaurants que aconsegueixin un grau "A" i un score 11 en dades d'estudi ISODate "2014-08-11T00:00:00Z".
db.restaurant.find({"grades.score":11,"grades.grade":"A","grades.date":ISODate("2014-08-11T00:00:00Z")},{restaurant_id:1,name:1,borough:1,cuisine:1})
23. Escriu una consulta per trobar el restaurant_id, name i grades per a aquells restaurants on el 2n element de varietat de graus conté un grau de "A" i marcador 9 sobre un ISODate "2014-08-11T00:00:00Z".
db.restaurant.find({"grades.2.grade":'A',"grades.2.score":9, "grades.2.date":ISODate("2014-08-11T00:00:00Z")},{restaurant_id:1, name:1, grades:1})
24. Escriu una consulta per trobar el restaurant_id, name, adreça i ubicació geogràfica per a aquells restaurants on el segon element del array coord conté un valor que és més de 42 i fins a 52.
db.restaurant.find({"address.coord.1":{$gte:42,$lte:52}},{restaurante_id:1,name:1,address:1})
25. Escriu una consulta per organitzar el nom dels restaurants en ordre ascendent juntament amb totes les columnes.
db.restaurant.find({}).sort({name:1})
