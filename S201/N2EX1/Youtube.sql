-- MySQL Script generated by MySQL Workbench
-- Wed May 17 10:38:32 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`table1`
-- -----------------------------------------------------




-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `UserName` VARCHAR(45) NOT NULL,
  `Sex` ENUM('Male', 'Female') NOT NULL,
  `Country` VARCHAR(45) NOT NULL,
  `ZIP` INT NOT NULL,
  PRIMARY KEY (`idUser`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idUser_UNIQUE` ON `mydb`.`User` (`idUser` ASC) VISIBLE;

CREATE UNIQUE INDEX `Email_UNIQUE` ON `mydb`.`User` (`Email` ASC) VISIBLE;

CREATE UNIQUE INDEX `Password_UNIQUE` ON `mydb`.`User` (`Password` ASC) VISIBLE;

CREATE UNIQUE INDEX `UserName_UNIQUE` ON `mydb`.`User` (`UserName` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Comments` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Comments` (
  `idComments` INT NOT NULL AUTO_INCREMENT,
  `CommentText` TEXT(600) NOT NULL,
  `Date/Hour` DATETIME NULL,
  `User_idUser` INT NOT NULL,
  `Video_idVideo` INT NOT NULL,
  PRIMARY KEY (`idComments`),
  CONSTRAINT `fk_Comments_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comments_Video1`
    FOREIGN KEY (`Video_idVideo`)
    REFERENCES `mydb`.`Video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idComments_UNIQUE` ON `mydb`.`Comments` (`idComments` ASC) VISIBLE;

CREATE INDEX `fk_Comments_User1_idx` ON `mydb`.`Comments` (`User_idUser` ASC) VISIBLE;

CREATE INDEX `fk_Comments_Video1_idx` ON `mydb`.`Comments` (`Video_idVideo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Like/Dislike`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Like/Dislike` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Like/Dislike` (
  `idLike/Dislike` INT NOT NULL AUTO_INCREMENT,
  `User_idUser` INT NOT NULL,
  `Type` ENUM('Like', 'Dislike') NOT NULL,
  `Date` DATETIME NULL,
  `Comments_idComments` INT NOT NULL,
  PRIMARY KEY (`idLike/Dislike`),
  CONSTRAINT `fk_Like/Dislike_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Like/Dislike_Comments1`
    FOREIGN KEY (`Comments_idComments`)
    REFERENCES `mydb`.`Comments` (`idComments`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idLike/Dislike_UNIQUE` ON `mydb`.`Like/Dislike` (`idLike/Dislike` ASC) VISIBLE;

CREATE INDEX `fk_Like/Dislike_User1_idx` ON `mydb`.`Like/Dislike` (`User_idUser` ASC) VISIBLE;

CREATE INDEX `fk_Like/Dislike_Comments1_idx` ON `mydb`.`Like/Dislike` (`Comments_idComments` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Channel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Channel` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Channel` (
  `idChannel` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Description` TEXT(200) NOT NULL,
  `CreationDate` DATETIME NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idChannel`),
  CONSTRAINT `fk_Channel_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Channel_User1_idx` ON `mydb`.`Channel` (`User_idUser` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Video` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Video` (
  `idVideo` INT NOT NULL,
  `TItle` VARCHAR(60) NOT NULL,
  `Description` TEXT(500) NOT NULL,
  `Size` INT NOT NULL,
  `FileName` VARCHAR(60) NOT NULL,
  `VideoDuration` INT NOT NULL,
  `Thumbnail` VARCHAR(60) NOT NULL,
  `Views` INT NOT NULL,
  `Status` ENUM('Public', 'Private', 'Hidden') NOT NULL,
  `UploadDate` DATETIME NOT NULL,
  `Like/Dislike_idLike/Dislike` INT NOT NULL,
  `Channel_idChannel` INT NOT NULL,
  PRIMARY KEY (`idVideo`),
  CONSTRAINT `fk_Video_Like/Dislike1`
    FOREIGN KEY (`Like/Dislike_idLike/Dislike`)
    REFERENCES `mydb`.`Like/Dislike` (`idLike/Dislike`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Video_Channel1`
    FOREIGN KEY (`Channel_idChannel`)
    REFERENCES `mydb`.`Channel` (`idChannel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idVideo_UNIQUE` ON `mydb`.`Video` (`idVideo` ASC) VISIBLE;

CREATE INDEX `fk_Video_Like/Dislike1_idx` ON `mydb`.`Video` (`Like/Dislike_idLike/Dislike` ASC) VISIBLE;

CREATE INDEX `fk_Video_Channel1_idx` ON `mydb`.`Video` (`Channel_idChannel` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Label`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Label` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Label` (
  `idLabel` INT NOT NULL,
  `Name` VARCHAR(60) NOT NULL,
  `Video_idVideo` INT NOT NULL,
  PRIMARY KEY (`idLabel`),
  CONSTRAINT `fk_Label_Video1`
    FOREIGN KEY (`Video_idVideo`)
    REFERENCES `mydb`.`Video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idLabel_UNIQUE` ON `mydb`.`Label` (`idLabel` ASC) VISIBLE;

CREATE INDEX `fk_Label_Video1_idx` ON `mydb`.`Label` (`Video_idVideo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Subscription` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Subscription` (
  `idSubscription` INT NOT NULL AUTO_INCREMENT,
  `User_idUser` INT NOT NULL,
  `Channel_idChannel` INT NOT NULL,
  PRIMARY KEY (`idSubscription`),
  CONSTRAINT `fk_Subscription_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Subscription_Channel1`
    FOREIGN KEY (`Channel_idChannel`)
    REFERENCES `mydb`.`Channel` (`idChannel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idSubscription_UNIQUE` ON `mydb`.`Subscription` (`idSubscription` ASC) VISIBLE;

CREATE INDEX `fk_Subscription_User1_idx` ON `mydb`.`Subscription` (`User_idUser` ASC) VISIBLE;

CREATE INDEX `fk_Subscription_Channel1_idx` ON `mydb`.`Subscription` (`Channel_idChannel` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Playlists` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Playlists` (
  `idPlaylists` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Date` DATETIME NOT NULL,
  `Estatus` ENUM('Private', 'Public') NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idPlaylists`),
  CONSTRAINT `fk_Playlists_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idPlaylists_UNIQUE` ON `mydb`.`Playlists` (`idPlaylists` ASC) VISIBLE;

CREATE UNIQUE INDEX `Name_UNIQUE` ON `mydb`.`Playlists` (`Name` ASC) VISIBLE;

CREATE INDEX `fk_Playlists_User1_idx` ON `mydb`.`Playlists` (`User_idUser` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Playlists_has_Video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Playlists_has_Video` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Playlists_has_Video` (
  `Playlists_idPlaylists` INT NOT NULL,
  `Video_idVideo` INT NOT NULL,
  PRIMARY KEY (`Playlists_idPlaylists`, `Video_idVideo`),
  CONSTRAINT `fk_Playlists_has_Video_Playlists1`
    FOREIGN KEY (`Playlists_idPlaylists`)
    REFERENCES `mydb`.`Playlists` (`idPlaylists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlists_has_Video_Video1`
    FOREIGN KEY (`Video_idVideo`)
    REFERENCES `mydb`.`Video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Playlists_has_Video_Video1_idx` ON `mydb`.`Playlists_has_Video` (`Video_idVideo` ASC) VISIBLE;

CREATE INDEX `fk_Playlists_has_Video_Playlists1_idx` ON `mydb`.`Playlists_has_Video` (`Playlists_idPlaylists` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

